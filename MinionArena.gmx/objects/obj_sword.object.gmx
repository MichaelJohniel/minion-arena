<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sword_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize the sword
swing = 1;
sword = 'sword'
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control the sword
scr_controller();

//Destroy sword
if !instance_exists(obj_player)
{instance_destroy()}

if instance_exists(obj_player)
{
//Follow the player
x = obj_player.x;
y = obj_player.y;
image_xscale = obj_player.image_xscale;

//Attack
if (akey) &amp;&amp; (obj_player.state = scr_move_state) &amp;&amp; (obj_player.vspd &lt;= 0)
    {sprite_index = asset_get_index('spr_' + string(sword) + '_swing'); image_index = 0;}
//Normal swing
if (sprite_index = asset_get_index('spr_' + string(sword) + '_swing')) &amp;&amp; (image_index = 2)
    {
    //Create hitbox
    if (image_xscale = 1)
        {instance_create(x+10, y-16, obj_player_hit);}
    if (image_xscale = -1)
        {instance_create(x-26, y-16, obj_player_hit);}
    //Swing Sound
    if (swing = 1) {audio_play_sound(snd_swing_one, 5, false);}
    if (swing = 2) {audio_play_sound(snd_swing_two, 5, false);}
    if (swing = 3) {audio_play_sound(snd_swing_three, 5, false);}
    }

//Air slash
if  (y != yprevious) &amp;&amp; (akey) &amp;&amp; (obj_player.state = scr_move_state) &amp;&amp; ((obj_player.vspd &gt; 0) || (dkey))
    {obj_player.state = scr_slash_state; sprite_index = asset_get_index('spr_' + string(sword) + '_slash');}
    //Create hitbox
    if (sprite_index = asset_get_index('spr_' + string(sword) + '_slash')) &amp;&amp; !(instance_exists(obj_player_slash))
        {instance_create(x, y, obj_player_slash);}

//Reset the slash
if (obj_player.state = scr_move_state) &amp;&amp; (sprite_index != asset_get_index('spr_' + string(sword) + '_swing'))
    {sprite_index = asset_get_index('spr_' + string(sword) + '_idle');}
    
}

//Delete the sword
if !instance_exists(obj_player)
{instance_destroy()}

//Sword sounds
swing = round(random_range(1,3));

//Change_sword 
if keyboard_check_pressed(ord('1')) {sword = 'sword'}
if keyboard_check_pressed(ord('2')) {sword = 'asword'}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Return to idle animation
if sprite_index = asset_get_index('spr_' + string(sword) + '_swing')
    {sprite_index = asset_get_index('spr_' + string(sword) + '_idle');}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
